---
- name: Prepare VM for running Ansible
  hosts: all
  gather_facts: no
  tasks:
    - name: Ensure Python is installed
      script: |
        install-py2.sh {{ ansible_python_interpreter|default("/usr/bin/python") }}
      args:
        creates: '{{ ansible_python_interpreter|default("/usr/bin/python") }}'
      become: yes

# for local customizations
- include: before.yml

- name: Common setup for all hosts
  hosts: all
  gather_facts: yes
  roles:
    - role: common
    - role: iptables
      # FIXME: should change to 'DROP' when all playbooks register their input ports!
      default_input_policy: 'ACCEPT'
    - role: ntpd
      ntp_server: '{{groups.ntp_master|default([])}}'
    - role: pdsh
  tasks:
    - name: Check if cuda is installed
      command: dpkg-query -W cuda-8-0
      register: cuda_repo_ubuntu_install_check
      ignore_errors: yes
      changed_when: "{{cuda_repo_ubuntu_install_check | failed}}"
    - name: CUDA | Download deb package for Ubuntu 16.04
      get_url:
        url: http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_8.0.61-1_amd64.deb
        dest: /tmp/cuda_install.deb
        checksum: md5:1f4dffe1f79061827c807e0266568731
      when: "{{cuda_repo_ubuntu_install_check | failed}}"
    - name: CUDA | Install downloaded deb package for Ubuntu 16.04
      apt:
        deb: /tmp/cuda_install.deb
      ignore_errors: yes
      when: "{{cuda_repo_ubuntu_install_check | failed}}" 
    - name: CUDA | Install cuda-8-0
      apt:
        name={{item}}
        state=latest
      with_items:
        - cuda-8-0
      when: "{{cuda_repo_ubuntu_install_check | failed}}" 
      become: yes
    #- name: CUDA | check /dev/nvidia* exists
      # fill later
    - name: restart server
      shell: sleep 2 && /sbin/shutdown -r now "Rebooting for CUDA driver"
      async: 1
      poll: 0
      become: yes
      become_method: sudo
      ignore_errors: true
      when: "{{cuda_repo_ubuntu_install_check | failed}}" 
    - set_fact: wait_host="{{ ansible_host }}"
    - name: waiting for server to come back after reboot
      local_action: wait_for host={{wait_host}} port=22 state=started delay=15 connect_timeout=300
      become: false
      when: "{{cuda_repo_ubuntu_install_check | failed}}"
    - name: Gather information about GPUs
      action: gpus
# Run all other playbooks one by one, so they get a chance of doing
# their setup depending on configured host groups
- include: roles/ansible.yml
- include: roles/slurm.yml
- include: roles/jenkins.yml
- include: roles/ganglia.yml
- include: roles/pbs+maui.yml
- include: roles/gridengine.yml
- include: roles/hadoop.yml
- include: roles/kubernetes.yml
- include: roles/pvfs2.yml
- include: roles/ceph.yml
- include: roles/glusterfs.yml
- include: roles/ipython.yml
- include: roles/htcondor.yml

# add-on software
- include: roles/r.yml

# Jupyter installation comes last, to allow it to pick up any SW that's been
# installed so far (e.g., for kernels, or for ipyparallel)
- include: roles/jupyterhub.yml

# for local customizations
- include: after.yml